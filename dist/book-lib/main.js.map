{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/book-list/book-list.component.css","webpack:///./src/app/book-list/book-list.component.html","webpack:///./src/app/book-list/book-list.component.ts","webpack:///./src/app/book/book.component.css","webpack:///./src/app/book/book.component.html","webpack:///./src/app/book/book.component.ts","webpack:///./src/app/class/book.ts","webpack:///./src/app/components/field-error-display/field-error-display.component.css","webpack:///./src/app/components/field-error-display/field-error-display.component.html","webpack:///./src/app/components/field-error-display/field-error-display.component.ts","webpack:///./src/app/modals/add-book/add-book.component.css","webpack:///./src/app/modals/add-book/add-book.component.html","webpack:///./src/app/modals/add-book/add-book.component.ts","webpack:///./src/app/modals/edit-book/edit-book.component.css","webpack:///./src/app/modals/edit-book/edit-book.component.html","webpack:///./src/app/modals/edit-book/edit-book.component.ts","webpack:///./src/app/modals/remove-book/remove-book.component.css","webpack:///./src/app/modals/remove-book/remove-book.component.html","webpack:///./src/app/modals/remove-book/remove-book.component.ts","webpack:///./src/app/pipes/remove-none-eng.ts","webpack:///./src/app/services/book.service.ts","webpack:///./src/app/services/store.service.ts","webpack:///./src/app/validators/validation.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar fixed-top navbar-dark bg-dark\\\">\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Book Store</a>\\n</nav>\\n<div id=\\\"main\\\">\\n  <article>\\n    <app-book-list></app-book-list>\\n  </article>\\n</div>\\n<footer>\\n</footer>\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'book-lib';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\n// modules\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { ReactiveFormsModule } from \"@angular/forms\";\nimport {NgxSmartModalModule} from \"ngx-smart-modal\";\n// pipes\nimport { RemoveNoneEngPipe } from \"./pipes/remove-none-eng\";\n// components\n\nimport { FieldErrorDisplayComponent } from './components/field-error-display/field-error-display.component';\nimport { BookListComponent } from \"./book-list/book-list.component\";\nimport { BookComponent } from \"./book/book.component\";\nimport { AddBookComponent } from './modals/add-book/add-book.component';\nimport { RemoveBookComponent } from './modals/remove-book/remove-book.component';\nimport { EditBookComponent } from './modals/edit-book/edit-book.component';\n// services\nimport { BookService } from \"./services/book.service\";\nimport {StoreService} from \"./services/store.service\";\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    BookComponent,\n    BookListComponent,\n    RemoveNoneEngPipe,\n    AddBookComponent,\n    RemoveBookComponent,\n    EditBookComponent,\n    FieldErrorDisplayComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    NgxSmartModalModule.forRoot(),\n    ReactiveFormsModule\n  ],\n  providers: [BookService,StoreService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".container-fluid {\\n  margin-top: 120px;\\n}\\n\"","module.exports = \"<app-add-book (notify)=\\\"onNotifyClicked($event)\\\"></app-add-book>\\n<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row\\\">\\n    <app-book class=\\\"col-auto\\\" *ngFor=\\\"let book of arrBooks\\\"\\n              [book]=\\\"book\\\"\\n              (bookObj)=\\\"onObject($event)\\\">\\n    </app-book>\\n  </div>\\n</div>\\n<app-edit-book [editBook]=\\\"editBook\\\" (notify)=\\\"onNotifyClicked($event)\\\" ></app-edit-book>\\n<app-remove-book [removeBook]=\\\"deleteBook\\\" (notify)=\\\"onNotifyClicked($event)\\\"></app-remove-book>\\n\\n\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport {BookService} from \"../services/book.service\";\nimport {Book} from \"../class/book\";\nimport {StoreService} from \"../services/store.service\";\n\n@Component({\n  selector: 'app-book-list',\n  templateUrl: './book-list.component.html',\n  styleUrls: ['./book-list.component.css'],\n  providers: [BookService]\n})\nexport class BookListComponent implements OnInit {\n  // array with books for template\n  public arrBooks: Book[] = new Array();\n  public editBook: Book;\n  public deleteBook: Book;\n\n  constructor(private bookService: BookService,\n              private storeService: StoreService) { }\n\n  ngOnInit() {\n    // on component init - fetch with book service all books to array of Books\n    this.bookService.getAllBooksGoogleAPI().then(\n      res => {\n          // store array of 10 books\n          let bookArr = res['items'];\n          // loop on the arr and fetch needed data\n          bookArr.forEach(bk => {\n              let _bk: Book = new Book;\n              _bk.id = bk['id'];\n              _bk.bookTitle = bk['volumeInfo']['title'];\n              _bk.authorName = bk['volumeInfo']['authors'][0];\n              _bk.publishedDate = bk['volumeInfo']['publishedDate'];\n              this.arrBooks.push(_bk);\n          });\n          // set Storage with books\n          this.storeService.setBooks(this.arrBooks);\n      }\n    ).catch(rej => {});\n  }\n\n  onNotifyClicked(message: string): void {\n    this.updateView();\n  }\n  onObject(_book: Book){\n    // update modal with the Book\n    this.editBook = _book;\n    this.deleteBook = _book;\n  }\n\n  updateView(){\n    this.storeService.getBooks().then(res => {\n      this.arrBooks = new Array();\n      this.arrBooks = res;\n    });\n\n  }\n\n}\n","module.exports = \".book {\\n  position: relative;\\n  margin: 10px;\\n  border: 1px solid #000;\\n  border-radius: 10px;\\n  box-shadow: 2px 2px 6px 0px  rgba(0,0,0,0.3);\\n  width: 200px;\\n  height: 350px;\\n  background: #86CECE;\\n}\\n.book h3 {\\n  text-align: center;\\n  margin-top:10px;\\n  padding: 0 20px 20px;\\n  font-size:1.3em;\\n}\\n.book .text {\\n  position: absolute;\\n  left: 0;\\n  bottom: 40px;\\n  text-align: center;\\n  padding: 0 20px 20px;\\n}\\n.book .text p{\\n  font-size:0.6em;\\n  float:left;\\n}\\n.book .buttons {\\n  position: absolute;\\n  left: 0;\\n  bottom: 10px;\\n  margin:10px;\\n}\\n.book .buttons > button {\\n  background: #CDA349;\\n  border: 1px solid #000;\\n  color: white;\\n  width:60px;\\n  padding: 5px;\\n  outline:none;\\n  font-size:0.8em;\\n  border-radius: 5px;\\n  margin-right: 5px;\\n}\\n\\n\\n\"","module.exports = \"<div class=\\\"book\\\">\\n  <h3>{{book.bookTitle | titlecase | removeNonEnglish }}</h3>\\n  <div class=\\\"text\\\">\\n    <p>Author: <span>{{book.authorName}}</span></p>\\n    <p>Published Date: <span>{{book.publishedDate}}</span></p>\\n    <p>ID: <span>{{book.id}} </span></p>\\n  </div>\\n  <div class=\\\"buttons\\\">\\n    <button (click)=\\\"editBook()\\\">edit</button>\\n    <button (click)=\\\"deleteBook()\\\">remove</button>\\n  </div>\\n</div>\\n\\n\\n\"","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {Book} from \"../class/book\";\nimport {NgxSmartModalService} from \"ngx-smart-modal\";\n\n@Component({\n  selector: 'app-book',\n  templateUrl: './book.component.html',\n  styleUrls: ['./book.component.css']\n})\nexport class BookComponent{\n  @Input() book: Book;\n  @Output() bookObj: EventEmitter<Book> = new EventEmitter<Book>();\n  constructor(public ngxSmartModalService: NgxSmartModalService) { }\n\n  editBook(){\n    // emit event to change Book object\n    this.bookObj.emit(this.book);\n    // open modal\n    this.ngxSmartModalService.getModal('editModal').open();\n  }\n\n  deleteBook(){\n    // emit event to change Book object\n    this.bookObj.emit(this.book);\n    // open modal\n    this.ngxSmartModalService.getModal('removeModal').open();\n  }\n\n}\n","export class Book {\n  id?: string;\n  authorName?: string;\n  publishedDate?: string;\n  bookTitle?: string;\n}\n","module.exports = \".error-msg {\\n  color: #a94442;\\n}\\n.fix-error-icon {\\n  top: 15px;\\n}\\n\"","module.exports = \"<div *ngIf=\\\"displayError\\\" >\\n  <span class=\\\"glyphicon glyphicon-remove form-control-feedback fix-error-icon\\\"></span>\\n  <span class=\\\"sr-only\\\">(error)</span>\\n  <div class=\\\"error-msg\\\">\\n    {{errorMsg}}\\n  </div>\\n</div>\\n\"","import {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-field-error-display',\n  templateUrl: './field-error-display.component.html',\n  styleUrls: ['./field-error-display.component.css']\n})\nexport class FieldErrorDisplayComponent {\n  @Input() errorMsg: string;\n  @Input() displayError: boolean;\n\n  constructor() { }\n\n}\n","module.exports = \"button {\\n  border: 0;\\n  color: white;\\n  padding: 10px;\\n  outline:none;\\n}\\nh1{\\n  text-align: center;\\n  font-size:1.5em;\\n}\\n.add-button{\\n  background-color: #CDA349 !important;\\n  position: absolute;\\n  top:0;\\n  left:0;\\n  border-radius: 0px 0px 10px 0px;\\n  padding:20px;\\n  margin-top:50px;\\n}\\n.modal-buttons{\\n  position: relative;\\n  display: block;\\n  padding: 30px;\\n}\\n.modal-buttons > #left {\\n  background: red;\\n  position: absolute;\\n  border-radius: 20px;\\n  top: 50%;\\n  left: 0;\\n  -webkit-transform: translateY(-50%);\\n          transform: translateY(-50%);\\n}\\n.modal-buttons > #right {\\n  background: green;\\n  position: absolute;\\n  border-radius: 20px;\\n  top: 50%;\\n  right: 0;\\n  -webkit-transform: translateY(-50%);\\n          transform: translateY(-50%);\\n}\\n.control-label.required:after {\\n  color: #d00;\\n  content: \\\"*\\\";\\n  position: relative;\\n  margin-left: 5px;\\n}\\n.form-group{\\n  margin-bottom: 20px;\\n}\\n\\n\"","module.exports = \"<button class=\\\"add-button\\\" (click)=\\\"ngxSmartModalService.getModal('addBook').open()\\\">Add A Book</button>\\n<ngx-smart-modal #myModal identifier=\\\"addBook\\\">\\n  <h1>Add A New Book </h1>\\n  <form [formGroup]=\\\"formGroup\\\">\\n    <div class=\\\"form-group\\\" [ngClass]=\\\"displayFieldCss('id')\\\">\\n      <label for=\\\"id\\\" class=\\\"control-label required\\\">ID</label>\\n      <input id=\\\"id\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"id\\\" [(ngModel)]=\\\"model.id\\\" />\\n      <app-field-error-display\\n        [displayError]=\\\"isFieldValid('id')\\\"\\n        errorMsg=\\\"Please insert book id\\\">\\n      </app-field-error-display>\\n    </div>\\n    <div class=\\\"form-group\\\" [ngClass]=\\\"displayFieldCss('authorName')\\\">\\n      <label for=\\\"authorName\\\" class=\\\"control-label required\\\">Author Name</label>\\n      <input id=\\\"authorName\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"authorName\\\" [(ngModel)]=\\\"model.authorName\\\" />\\n      <app-field-error-display\\n        [displayError]=\\\"isFieldValid('authorName')\\\"\\n        errorMsg=\\\"Please insert the author name\\\">\\n      </app-field-error-display>\\n    </div>\\n    <div class=\\\"form-group\\\" [ngClass]=\\\"displayFieldCss('publishedDate')\\\">\\n      <label for=\\\"publishedDate\\\" class=\\\"control-label required\\\">Published Date</label>\\n      <input id=\\\"publishedDate\\\" type=\\\"date\\\" class=\\\"form-control\\\" formControlName=\\\"publishedDate\\\" [(ngModel)]=\\\"model.publishedDate\\\" />\\n      <app-field-error-display\\n        [displayError]=\\\"isFieldValid('publishedDate')\\\"\\n        errorMsg=\\\"Please insert proper date MM/DD/YYYY\\\">\\n      </app-field-error-display>\\n    </div>\\n    <div class=\\\"form-group\\\" [ngClass]=\\\"displayFieldCss('bookTitle')\\\">\\n      <label for=\\\"bookTitle\\\" class=\\\"control-label required\\\">Book Title</label>\\n      <input id=\\\"bookTitle\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"bookTitle\\\" [(ngModel)]=\\\"model.bookTitle\\\" />\\n      <app-field-error-display\\n        [displayError]=\\\"isFieldValid('bookTitle')\\\"\\n        errorMsg=\\\"{{errorMessage}}\\\">\\n      </app-field-error-display>\\n    </div>\\n    <div class=\\\"modal-buttons\\\">\\n      <button id=\\\"left\\\" (click)=\\\"action('Close')\\\">Close</button>\\n      <button id=\\\"right\\\" (click)=\\\"action('Ok')\\\">Ok</button>\\n    </div>\\n  </form>\\n</ngx-smart-modal>\\n\"","import {Component, EventEmitter, Output} from '@angular/core';\nimport {NgxSmartModalService} from \"ngx-smart-modal\";\nimport {FormBuilder, FormGroup, Validators, AbstractControl, FormControl} from \"@angular/forms\";\nimport {Book} from \"../../class/book\";\nimport {StoreService} from \"../../services/store.service\";\n\n@Component({\n  selector: 'app-add-book',\n  templateUrl: './add-book.component.html',\n  styleUrls: ['./add-book.component.css']\n})\nexport class AddBookComponent {\n  @Output() notify: EventEmitter<string> = new EventEmitter<string>();\n  model: Book = new Book;\n  formGroup: FormGroup;\n  id: AbstractControl;\n  authorName: AbstractControl;\n  publishedDate: AbstractControl;\n  bookTitle: AbstractControl;\n\n  errorMessage: string = \"Please insert a title for the book\";\n\n  constructor(public ngxSmartModalService: NgxSmartModalService,\n              public formBuilder: FormBuilder,\n              public storeService: StoreService){\n    this.formGroup = this.formBuilder.group({\n      id:               [this.model.id, Validators.required],\n      authorName:       [this.model.authorName, Validators.required],\n      publishedDate:    [this.model.publishedDate, Validators.required],\n      bookTitle:        [this.model.bookTitle, [Validators.required], this.validationTitle.bind(this)]\n    });\n  }\n\n  action(s){\n    if(s === 'Ok'){\n      if (this.formGroup.valid) {\n        // added it to store service\n        let _book: Book = new Book;\n        _book.id = this.model.id;\n        _book.bookTitle = this.model.bookTitle;\n        _book.publishedDate = this.model.publishedDate;\n        _book.authorName = this.model.authorName;\n\n        this.storeService.addBook(_book).then(\n          () => {\n            this.notify.emit('Added Successfully');\n            this.resetForm();\n          }\n        ).catch(err => console.log(err))\n      } else {\n        Object.keys(this.formGroup.controls).forEach(field => {\n          const control = this.formGroup.get(field);\n          control.markAsTouched({ onlySelf: true });\n        });\n      }\n    } else {\n      this.resetForm();\n    }\n\n  }\n\n  resetForm(){\n    this.ngxSmartModalService.getModal('addBook').close();\n    this.formGroup.reset();\n  }\n\n  isFieldValid(field: string) {\n    return !this.formGroup.get(field).valid && this.formGroup.get(field).touched;\n  }\n\n  displayFieldCss(field: string) {\n    return {\n      'has-error': this.isFieldValid(field),\n      'has-feedback': this.isFieldValid(field)\n    };\n  }\n\n  validationTitle(control: AbstractControl){\n    return this.storeService.getBooks().then(\n      res => {\n        let titleBook = control.value;\n        let isExist = res.filter( book => book.bookTitle == titleBook );\n        if (isExist['length']) {\n          this.errorMessage = 'Please choose a different title for the book';\n          return {'bookTitleExist': true};\n        } else {\n          return null;\n        }\n      })\n  }\n\n}\n","module.exports = \"button {\\n  border: 0;\\n  color: white;\\n  padding: 10px;\\n  margin-bottom:10px;\\n  border-radius: 20px;\\n  outline:none;\\n}\\nh1{\\n  text-align: center;\\n  font-size:1.5em;\\n}\\n.modal-buttons{\\n  position: relative;\\n  display: block;\\n  padding: 30px;\\n}\\n.modal-buttons > #left {\\n  background: red;\\n  position: absolute;\\n  top: 50%;\\n  left: 0;\\n  -webkit-transform: translateY(-50%);\\n          transform: translateY(-50%);\\n}\\n.modal-buttons > #right {\\n  background: green;\\n  position: absolute;\\n  top: 50%;\\n  right: 0;\\n  -webkit-transform: translateY(-50%);\\n          transform: translateY(-50%);\\n}\\n\"","module.exports = \"<ngx-smart-modal #editModal identifier=\\\"editModal\\\">\\n  <h1>Edit An Existing Book </h1>\\n  <form [formGroup]=\\\"formGroup\\\">\\n    <div class=\\\"form-group\\\" [ngClass]=\\\"displayFieldCss('id')\\\">\\n      <label for=\\\"id\\\" class=\\\"control-label required\\\">ID</label>\\n      <input id=\\\"id\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"id\\\" [(ngModel)]=\\\"model.id\\\" />\\n      <app-field-error-display\\n        [displayError]=\\\"isFieldValid('id')\\\"\\n        errorMsg=\\\"Please insert a book id\\\">\\n      </app-field-error-display>\\n    </div>\\n    <div class=\\\"form-group\\\" [ngClass]=\\\"displayFieldCss('authorName')\\\">\\n      <label for=\\\"authorName\\\" class=\\\"control-label required\\\">Author Name</label>\\n      <input id=\\\"authorName\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"authorName\\\" [(ngModel)]=\\\"model.authorName\\\" />\\n      <app-field-error-display\\n        [displayError]=\\\"isFieldValid('authorName')\\\"\\n        errorMsg=\\\"Please insert the author name\\\">\\n      </app-field-error-display>\\n    </div>\\n    <div class=\\\"form-group\\\" [ngClass]=\\\"displayFieldCss('publishedDate')\\\">\\n      <label for=\\\"publishedDate\\\" class=\\\"control-label required\\\">Published Date</label>\\n      <input id=\\\"publishedDate\\\" type=\\\"date\\\" class=\\\"form-control\\\" formControlName=\\\"publishedDate\\\" [(ngModel)]=\\\"model.publishedDate\\\" />\\n      <app-field-error-display\\n        [displayError]=\\\"isFieldValid('publishedDate')\\\"\\n        errorMsg=\\\"Please insert proper date MM/DD/YYYY\\\">\\n      </app-field-error-display>\\n    </div>\\n    <div class=\\\"form-group\\\" [ngClass]=\\\"displayFieldCss('bookTitle')\\\">\\n      <label for=\\\"bookTitle\\\" class=\\\"control-label required\\\">Book Title</label>\\n      <input id=\\\"bookTitle\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"bookTitle\\\" [(ngModel)]=\\\"model.bookTitle\\\" />\\n      <app-field-error-display\\n        [displayError]=\\\"isFieldValid('bookTitle')\\\"\\n        errorMsg=\\\"{{errorMessage}}\\\">\\n      </app-field-error-display>\\n    </div>\\n    <div class=\\\"modal-buttons\\\">\\n      <button id=\\\"left\\\" (click)=\\\"action('Close')\\\">Close</button>\\n      <button id=\\\"right\\\" (click)=\\\"action('Ok')\\\">Ok</button>\\n    </div>\\n  </form>\\n</ngx-smart-modal>\\n\"","import {Component, EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output, SimpleChanges} from '@angular/core';\nimport {NgxSmartModalService} from \"ngx-smart-modal\";\nimport {AbstractControl, FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport {Book} from \"../../class/book\";\nimport {ValidationService} from \"../../validators/validation.service\";\nimport {StoreService} from \"../../services/store.service\";\n\n@Component({\n  selector: 'app-edit-book',\n  templateUrl: './edit-book.component.html',\n  styleUrls: ['./edit-book.component.css']\n})\nexport class EditBookComponent implements OnChanges{\n  @Output() notify: EventEmitter<string> = new EventEmitter<string>();\n  @Input() editBook = null;\n  model: Book = new Book;\n  modelSubmit: Book = new Book;\n  formGroup: FormGroup;\n  id: AbstractControl;\n  authorName: AbstractControl;\n  publishedDate: AbstractControl;\n  bookTitle: AbstractControl;\n  errorMessage: string = \"Please insert a title for the book\";\n\n  constructor(public ngxSmartModalService: NgxSmartModalService,\n              public formBuilder: FormBuilder,\n              public storeService: StoreService) {\n    this.formGroup = this.formBuilder.group({\n      id:               [this.model.id, Validators.required],\n      authorName:       [this.model.authorName, Validators.required],\n      publishedDate:    [this.model.publishedDate, [Validators.required ,ValidationService.dateValidator]],\n      bookTitle:        [this.model.bookTitle, [Validators.required], this.validationTitle.bind(this)]\n    });\n\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if(changes.editBook.firstChange) {\n      return;\n    } else {\n        this.modelSubmit = changes.editBook.currentValue;\n        // keep value aside\n        this.model = new Book;\n        this.model.id = this.modelSubmit.id;\n        this.model.authorName = this.modelSubmit.authorName;\n        this.model.publishedDate = this.modelSubmit.publishedDate;\n        this.model.bookTitle = this.modelSubmit.bookTitle;\n    }\n  }\n\n  action(s){\n    if(s === 'Ok'){\n      if (this.formGroup.valid) {\n        // added it to store service\n        this.storeService.editBook(this.model,this.modelSubmit).then(\n          () => {\n            this.notify.emit('Edited Successfully');\n            this.ngxSmartModalService.getModal('editModal').close();\n          }\n        ).catch(() => {})\n      } else {\n        Object.keys(this.formGroup.controls).forEach(field => {\n          const control = this.formGroup.get(field);\n          control.markAsTouched({ onlySelf: true });\n        });\n      }\n    } else {\n      this.ngxSmartModalService.getModal('editModal').close();\n    }\n  }\n\n  isFieldValid(field: string) {\n    return !this.formGroup.get(field).valid && this.formGroup.get(field).touched;\n  }\n\n  displayFieldCss(field: string) {\n    return {\n      'has-error': this.isFieldValid(field),\n      'has-feedback': this.isFieldValid(field)\n    };\n  }\n\n  validationTitle(control: AbstractControl) {\n    return this.storeService.getBooks().then(\n      res => {\n        // if it is the same , dont check and exit\n        if(this.editBook.bookTitle == control.value) {\n          return null;\n        } else {\n          let isExist = res.filter(book => book.bookTitle == control.value);\n          if (isExist['length']) {\n            this.errorMessage = 'Please choose a different title for the book';\n            return {'bookTitleExist': true};\n          } else {\n            return null;\n          }\n        }\n      });\n  }\n\n\n}\n","module.exports = \"button {\\n  border: 0;\\n  color: white;\\n  padding: 10px;\\n  margin-bottom:10px;\\n  border-radius: 20px;\\n  outline:none;\\n}\\nh1{\\n  text-align: center;\\n  font-size:1.5em;\\n}\\np{\\n  text-align: center;\\n}\\n.modal-buttons{\\n  position: relative;\\n  display: block;\\n  padding: 30px;\\n}\\n.modal-buttons > #left {\\n  background: red;\\n  position: absolute;\\n  top: 50%;\\n  left: 0;\\n  -webkit-transform: translateY(-50%);\\n          transform: translateY(-50%);\\n}\\n.modal-buttons > #right {\\n  background: green;\\n  position: absolute;\\n  top: 50%;\\n  right: 0;\\n  -webkit-transform: translateY(-50%);\\n          transform: translateY(-50%);\\n}\\n\"","module.exports = \"<ngx-smart-modal #removeModal identifier=\\\"removeModal\\\">\\n  <h1>Delete An Existing Book </h1>\\n  <div *ngIf=\\\"removeBook\\\">\\n    <p>Do you want to delete this book ?</p>\\n    <p>ID = {{removeBook.id}}</p>\\n  </div>\\n  <div class=\\\"modal-buttons\\\">\\n    <button id=\\\"left\\\" (click)=\\\"action('Close')\\\">Close</button>\\n    <button id=\\\"right\\\" (click)=\\\"action('Ok')\\\">Ok</button>\\n  </div>\\n</ngx-smart-modal>\\n\"","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {NgxSmartModalService} from \"ngx-smart-modal\";\nimport {StoreService} from \"../../services/store.service\";\n\n@Component({\n  selector: 'app-remove-book',\n  templateUrl: './remove-book.component.html',\n  styleUrls: ['./remove-book.component.css']\n})\nexport class RemoveBookComponent {\n  @Output() notify: EventEmitter<string> = new EventEmitter<string>();\n  @Input() removeBook = null;\n  constructor(public ngxSmartModalService: NgxSmartModalService,\n              private storeService: StoreService) { }\n\n  action(s){\n    if(s === 'Ok') {\n      this.storeService.getBooks().then(\n        res => {\n          // remove book id from array and set new books array for storage\n          const store = res.filter(book => book.id != this.removeBook.id );\n          this.storeService.clearBooks().then(\n            res => {\n              // console.log(res);\n              this.storeService.setBooks(store);\n              this.notify.emit('Deleted Successfully')\n            });\n        });\n    }\n    this.ngxSmartModalService.getModal('removeModal').close();\n\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'removeNonEnglish'\n})\nexport class RemoveNoneEngPipe implements PipeTransform {\n  transform(value: string, args: any[]): string {\n    if (value === null) return 'Not assigned';\n    return value.replace(/[`~!@#$%^&*()_|+\\-=?;:'\",.<>\\{\\}\\[\\]\\\\\\/]/gi, ' ').trim();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable()\nexport class BookService {\n\n  public url = 'https://www.googleapis.com/books/v1/volumes?q=war';\n  public headerConfig: any;\n\n  constructor(private http: HttpClient) {\n    let headers: HttpHeaders = new HttpHeaders();\n    headers = headers.set('Content-Type', 'application/json');\n    this.headerConfig = headers;\n  }\n\n  public getAllBooksGoogleAPI() {\n    return new Promise((resolve, reject) => {\n      this.http.get(this.url , {\n        headers: this.headerConfig,\n      })\n        .subscribe(res => {\n          resolve(res);\n        }, (err) => {\n          reject(err);\n        });\n    });\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport * as localForage from 'localforage';\nimport {Book} from \"../class/book\";\n\n@Injectable()\nexport class StoreService {\n\n  public books: Book[] = null;\n  public instance: any;\n  constructor () {\n    localForage.config({\n      driver      : localForage.WEBSQL, // Force WebSQL; same as using setDriver()\n      name        : 'BookLib',\n      version     : 1.0,\n      size        : 4980736, // Size of database, in bytes. WebSQL-only for now.\n      storeName   : 'keyvaluepairs', // Should be alphanumeric, with underscores.\n      description : 'some description'\n    });\n    this.instance = localForage.createInstance({});\n  }\n  public getBooks(): Promise<Book[]> {\n    if (this.books) {\n      return Promise.resolve(this.books);\n    } else {\n      return this.instance.getItem('books').then((res) => {\n        return res;\n      });\n    }\n  }\n\n  public setBooks(_books: Book[]): void {\n    this.books = _books;\n    return this.instance.setItem('books', _books).then(res => {})\n  }\n  public clearBooks(): Promise<Boolean> {\n    this.instance.removeItem('books');\n    return Promise.resolve(true);\n\n  }\n  public addBook(_book: Book): Promise<Boolean> {\n    return new Promise((resolve, reject) => {\n      this.books.push(_book);\n      resolve(true);\n    });\n  };\n\n  public editBook(_book: Book,_bookOld: Book): Promise<Boolean> {\n    return new Promise((resolve, reject) => {\n      let arr = this.books.filter(book => book != _bookOld);\n      arr.push(_book);\n      this.books = arr;\n      resolve(true);\n    });\n  };\n\n\n}\n","import { AbstractControl } from '@angular/forms';\nimport {StoreService} from \"../services/store.service\";\n\nexport class ValidationService {\n\n  static dateValidator(control: AbstractControl) {\n    if (!control.value) return;\n    else {\n      if (control.value.match(/^\\d{4}[-]\\d{2}[-]\\d{2}$/)) {\n        return null;\n      } else {\n        return { 'invalidDate': true };\n      }\n    }\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}